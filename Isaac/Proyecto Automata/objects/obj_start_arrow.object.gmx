<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Position Variables
arrow_start_x = 0;
arrow_start_y = 0;
arrow_end_x = mouse_x;
arrow_end_y = mouse_y;
first_state_x_difference = 0;
first_state_y_difference = 0;
//Image Variables
arrow_size = 15;
//Other
current_state = "PLACING";
first_state = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Choose State
switch(current_state){
    case "PLACING":
        //Update arrow positions
        arrow_start_x = x;
        arrow_start_y = y;
        arrow_end_x = mouse_x;
        arrow_end_y = mouse_y;
        //Listen for gestures
        switch(CURRENT_GESTURE){
            case "OFF":
                //Place start arrow
                var hovered_state = scr_mouse_hovering_object(obj_state,false,true);
                if(hovered_state != noone){
                    first_state = hovered_state;
                    first_state_x_difference = arrow_end_x-arrow_start_x;
                    first_state_y_difference = arrow_end_y-arrow_start_y;
                    current_state = "PLACED";
                }else{
                    instance_destroy();
                }
                break;
        }
        break;
    case "PLACED":
        //Update Positions
        x = first_state.x-first_state_x_difference;
        y = first_state.y-first_state_y_difference;
        //Update arrow positions
        arrow_start_x = x;
        arrow_start_y = y;
        arrow_end_x = first_state.x;
        arrow_end_y = first_state.y;
        //Calculate angles
        var angle = point_direction(arrow_start_x,arrow_start_y,arrow_end_x,arrow_end_y);
        var end_offset_angle = angle+180;
        //Adjust arrows
        var radius = first_state.radius;
        var end_x_offset = lengthdir_x(radius,end_offset_angle);
        var end_y_offset = lengthdir_y(radius,end_offset_angle);
        arrow_end_x = first_state.x+end_x_offset;
        arrow_end_y = first_state.y+end_y_offset;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Arrow
var arrow_color = c_black;
var original_color = draw_get_color();
draw_set_color(arrow_color);
draw_arrow(x,y,arrow_end_x,arrow_end_y,arrow_size);
draw_set_color(original_color);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
