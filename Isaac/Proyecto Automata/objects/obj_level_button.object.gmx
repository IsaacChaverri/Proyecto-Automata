<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_level_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_button</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit Event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Flag Variables
is_first_level = false;
is_last_level = false;
level_locked = true;
//Text Variables
text_font = fnt_arial_24;
text_color = c_black;
letter = "";
//Image Variables
arrow_size = 20;
//Other Variables
page = noone;
level_data = noone;
previous_level_button = noone;
next_level_button = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit Event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if first or last
//First
if(previous_level_button == noone){
    is_first_level = true;
}else{
    is_first_level = false;
}
//Last
if(next_level_button == noone){
    is_last_level = true;
}else{
    is_last_level = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Sprite
if(is_last_level){
    sprite_index = spr_last_level_button;
}else{
    sprite_index = spr_level_button;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Level Locked
//Check if won previous level
var won_previous_level = false;
if(previous_level_button != noone){
    with(previous_level_button){
        if(scr_find_in_list(level_data.won_users_list,CURRENT_USER_DATA.email) != noone){
            won_previous_level = true;
        }
    }
}else{
    won_previous_level = true;
}
if(won_previous_level){
    level_locked = false;
}else{
    level_locked = true;
}
//Change button script
if(level_locked){
    script = scr_level_button_locked;
}else{
    script = scr_level_button;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Level Button
//Self
draw_self();
//First Arrow
if(is_first_level){
    var radius = sprite_width/2;
    var angle = -45;
    var arrow_end_x_offset = lengthdir_x(radius,angle-180);
    var arrow_end_y_offset = lengthdir_y(radius,angle-180);
    var arrow_end_x = x+arrow_end_x_offset;
    var arrow_end_y = y+arrow_end_y_offset;
    var arrow_start_x_offset = arrow_end_x_offset;
    var arrow_start_y_offset = arrow_end_y_offset;
    var arrow_start_x = arrow_end_x+arrow_start_x_offset;
    var arrow_start_y = arrow_end_y+arrow_start_y_offset;
    draw_arrow(arrow_start_x,arrow_start_y,arrow_end_x,arrow_end_y,arrow_size);
}
//Letter
scr_setup_write(text_font,fa_center,fa_middle,c_black);
var text = letter;
var text_x = x;
var text_y = y;
var original_draw_color = draw_get_color();
draw_set_color(text_color);
draw_text(text_x,text_y,text);
draw_set_color(original_draw_color);
//Next Arrow
if(next_level_button != noone){
    var radius = sprite_width/2;
    var angle = -90;
    var arrow_end_x_offset = lengthdir_x(radius,angle-180);
    var arrow_end_y_offset = lengthdir_y(radius,angle-180);
    var arrow_end_x = next_level_button.x+arrow_end_x_offset;
    var arrow_end_y = next_level_button.y+arrow_end_y_offset;
    var arrow_start_x_offset = lengthdir_x(radius,angle);
    var arrow_start_y_offset = lengthdir_y(radius,angle);
    var arrow_start_x = x+arrow_start_x_offset;
    var arrow_start_y = y+arrow_start_y_offset;
    draw_arrow(arrow_start_x,arrow_start_y,arrow_end_x,arrow_end_y,arrow_size);
}
//Locked Icon
if(level_locked){
    draw_sprite_ext(spr_level_button_locked_icon,0,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
