<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//State
scr_initialize_state();
letters_list = ds_list_create();
ds_list_add(letters_list,"A","B","C","D","E");
pages_list = ds_list_create();
ds_list_add(pages_list,"P","EM","EA","KG","IT");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create levels
switch(state.counter){
   case 0:
      var levels_amount = 2;
      for(var i=0;i&lt;levels_amount ;i++){
         var color_selection = c_dkgray;
         var new_level_x_offset = room_width/2;
         var level_header_height = sprite_get_height(spr_level_handler);
         var new_level_y_offset = level_header_height + level_header_height/2;
         var new_level_x = new_level_x_offset;
         var level_button_height = sprite_get_height(sprt_initial_level);
         var levels_y_distance = level_button_height*1.5;
         var new_level_y = new_level_y_offset+(levels_y_distance*i);
         var new_level_depth = depth-1;
         var new_level_button = scr_instance_create_depth(new_level_x,new_level_y,0,obj_initial_level);
         var new_level_image_index = 0;
         if(i%2 != 0){
                new_level_image_index = 1;
                color_selection = c_white;
         }
         var new_level_letter = ds_list_find_value(letters_list,i);
         var new_level_locked = false;
         if(i == levels_amount){
                add_level = scr_instance_create_depth(new_level_x,new_level_y,-10,obj_add_level);
         }
         if(i == 0){
                arrow_init = scr_instance_create_depth(x-sprite_get_height(sprt_initial_arrow)-5,y-sprite_get_width(sprt_initial_arrow)-5,40,obj_init_arrow);
         }
         if (i != levels_amount){
            next_arrow = scr_instance_create_depth(room_width/2 ,new_level_y + sprite_get_height(spr_next_arrow)*0.8,40,obj_next_arrow);
         }
         with(new_level_button){
            image_index = new_level_image_index;
                letter = new_level_letter;
                level_locked = new_level_locked;
                color = color_selection
         }
      }
        state.counter++;
        break;
   case 1:
        var levels_amount = 5;
        var color_selection = c_dkgray;
        for(var i=0;i&lt;levels_amount ;i++){
            var new_level_x_offset =  obj_level_bottom.x;
            var new_level_y_offset =  obj_level_bottom.y;
            var levels_x_distance = sprite_get_width(sprt_page_select) * 2;
            var new_level_x = new_level_x_offset + (levels_x_distance*i);
            var new_page_button = scr_instance_create_depth(new_level_x,new_level_y_offset,-10,obj_selected_page);
            var new_page_image_index = 0;
            if(i == 0){
                new_page_image_index = 1;
                color_selection = c_white;
            }
            var page_name = ds_list_find_value(pages_list,i);
            with(new_page_button){
                image_index = new_page_image_index;
                name = page_name;
                color = color_selection;
            }
            
         }
        state.counter++;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
