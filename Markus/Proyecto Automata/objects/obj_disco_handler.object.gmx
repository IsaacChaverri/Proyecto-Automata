<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_disco_handler</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Flag Variables
initialized_dependent_variables = false;
//Position Variables
border_pad = sprite_width/32;
border_horizontal_pad = border_pad;
border_vertical_pad = border_pad;
//Other Variables
step_numbers_list = ds_list_create();
steps_list = ds_list_create();
max_horizontal_steps = 6;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Dependent Variables
if(not initialized_dependent_variables){
    initialized_dependent_variables = true;
    
    //Create Robot
    var robot_x = x+(sprite_width/2);
    var robot_y_offset = (sprite_height/2)+(sprite_height/8);
    var robot_y = y+robot_y_offset;
    var robot_depth = depth-1;
    robot = scr_instance_create_depth(robot_x,robot_y,robot_depth,obj_robot);
    //Create Steps
    var step_numbers_list_size = ds_list_size(step_numbers_list);
    var column_index = 0;
    var row_index = 0;
    var step_counter = 0;
    for(var step_counter=0;step_counter&lt;step_numbers_list_size;step_counter++){
        var temp_step_number = ds_list_find_value(step_numbers_list,step_counter);
        var step_width = sprite_get_width(spr_step);
        var step_height = sprite_get_height(spr_step);
        var new_step_x = column_index*step_width;
        var new_step_y = row_index*step_height;
        var new_step_depth = depth-1;
        var new_step = scr_instance_create_depth(new_step_x,new_step_y,new_step_depth,obj_step);
        with(new_step){
            number = temp_step_number;
        }
        ds_list_add(steps_list,new_step);
        
        column_index++;
        if(column_index &gt; max_horizontal_steps){
            column_index = 0;
            row_index++;
        }
    }
    var total_steps_width = column_index*step_width;
    if(row_index &gt; 0){
        total_steps_width = max_horizontal_steps*step_width;
    }
    var middle_x_point = x+(sprite_width/2);
    var top_y_point = y+border_vertical_pad+(step_height/2);
    var first_step = ds_list_find_value(steps_list,0);
    var x_difference = middle_x_point-(first_step.x+(total_steps_width/2));
    var y_difference = top_y_point-first_step.y;
    with(obj_step){
        x += x_difference;
        y += y_difference;
    }
    //Create Description Button
    description_button = noone;
    if(CURRENT_LEVEL_DATA.description != ""){
        var description_button_width = sprite_get_width(spr_description_button);
        var description_button_height = sprite_get_height(spr_description_button);
        var description_button_x = x+border_horizontal_pad+(description_button_width/2);
        var description_button_y = y+border_vertical_pad+(description_button_height/2);
        var description_button_depth = depth-1;
        description_button = scr_instance_create_depth(description_button_x,description_button_y,description_button_depth,obj_button);
        with(description_button){
            sprite_index = spr_description_button;
            script = scr_disco_description_button;
        }
    }
    //Create Pause Button
    var pause_button_width = sprite_get_width(spr_pause_button);
    var pause_button_height = sprite_get_height(spr_pause_button);
    var pause_button_x = x+sprite_width-border_horizontal_pad-(pause_button_width/2);
    var pause_button_y = y+border_vertical_pad+(pause_button_height/2);
    var pause_button_depth = depth-1;
    pause_button = scr_instance_create_depth(pause_button_x,pause_button_y,pause_button_depth,obj_button);
    with(pause_button){
        sprite_index = spr_pause_button;
        script = scr_disco_pause_button;
    }
    //Create Trash Button
    var trash_button_width = sprite_get_width(spr_automata_trash);
    var trash_button_height = sprite_get_height(spr_automata_trash);
    var trash_button_x = x+sprite_width-border_horizontal_pad-(trash_button_width/2);
    var trash_button_y = y+sprite_height-border_vertical_pad-(trash_button_height/2);
    var trash_button_depth = depth-1;
    trash_button = scr_instance_create_depth(trash_button_x,trash_button_y,trash_button_depth,obj_automata_trash_button);
    with(trash_button){
        sprite_index = spr_automata_trash;
        script = scr_automata_trash_button;
    }
    //Create Remainder States Counter
    var remainder_states_counter_width = sprite_get_width(spr_remainder_states_counter);
    var remainder_states_counter_height = sprite_get_height(spr_remainder_states_counter);
    var remainder_states_counter_x = x+border_horizontal_pad+(remainder_states_counter_width/2);
    var remainder_states_counter_y = y+sprite_height-border_vertical_pad-(remainder_states_counter_height/2);
    var remainder_states_counter_depth = depth-1;
    remainder_states_counter = scr_instance_create_depth(remainder_states_counter_x,remainder_states_counter_y,remainder_states_counter_depth,obj_remainder_states_counter);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
