<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_administrator_add_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_button</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit Event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Flag Variables
initialized_dependent_variables = false;
//Other Variables
page = noone;
last_level_button = noone;
script = scr_administrator_add_button;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inherit Event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Last Level Button
var level_buttons_list = page.level_buttons_list;
var level_buttons_list_size = ds_list_size(level_buttons_list);
last_level_button = ds_list_find_value(level_buttons_list,level_buttons_list_size-1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Position
var last_level_button_x = page.x;
var page_name_box = page.page_name_box;
var page_name_box_height = sprite_get_height(spr_page_name_box);
var first_level_button_y_offset = page_name_box_height*1.25;
var first_level_button_y = page_name_box.y+(page_name_box_height/2)+first_level_button_y_offset;
var last_level_button_y = first_level_button_y;
var levels_y_difference = 0;
if(last_level_button != undefined and instance_exists(last_level_button)){
    last_level_button_x = last_level_button.x;
    last_level_button_y = last_level_button.y;
    levels_y_difference = page.levels_y_difference;
}
x = last_level_button_x;
y = last_level_button_y+levels_y_difference;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Add Button
//Self
draw_self();
//Arrow
if(last_level_button != undefined and instance_exists(last_level_button)){
    var arrow_angle = point_direction(last_level_button.x,last_level_button.y,x,y);
    var last_level_button_radius = last_level_button.sprite_width/2;
    var administrator_add_button_radius_offset = (sprite_width/4);
    var administrator_add_button_radius = (sprite_width/2)+administrator_add_button_radius_offset;
    var arrow_start_x_offset = lengthdir_x(last_level_button_radius,arrow_angle);
    var arrow_start_y_offset = lengthdir_y(last_level_button_radius,arrow_angle);
    var arrow_start_x = last_level_button.x+arrow_start_x_offset;
    var arrow_start_y = last_level_button.y+arrow_start_y_offset;
    var arrow_end_x_offset = lengthdir_x(administrator_add_button_radius,arrow_angle-180);
    var arrow_end_y_offset = lengthdir_y(administrator_add_button_radius,arrow_angle-180);
    var arrow_end_x = x+arrow_end_x_offset;
    var arrow_end_y = y+arrow_end_y_offset;
    var arrow_size = last_level_button.arrow_size;
    draw_arrow(arrow_start_x,arrow_start_y,arrow_end_x,arrow_end_y,arrow_size);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
