<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Flag Variables
initialized_dependent_variables = false;
//Image Variables
width = 0;
height = 0;
color = c_gray;
//Text Variables
title = "";
title_color = c_white;
title_drawn_text = title;
title_max_height = 0;
title_max_width = GAME_WIDTH*0.8;
title_horizontal_padding = 70;
title_vertical_padding = 50;
title_fonts_list = ds_list_create();
ds_list_add(title_fonts_list,fnt_montserrat_48_bold,fnt_montserrat_36_bold,fnt_montserrat_30_bold,fnt_montserrat_24_bold,fnt_montserrat_18_bold,fnt_montserrat_12_bold);
title_font = ds_list_find_value(title_fonts_list,0);
description = "";
description_color = c_white;
description_drawn_text = description;
description_max_height = GAME_HEIGHT/4;
description_max_width = 0;
description_horizontal_padding = 10;
description_vertical_padding = 50;
description_fonts_list = ds_list_create();
ds_list_add(description_fonts_list,fnt_montserrat_24,fnt_montserrat_18,fnt_montserrat_12);
description_font = ds_list_find_value(description_fonts_list,0);
//Other Variables
screenshot = noone;
buttons_list = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reactivate Instances
scr_reactivate_all();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Instances
//Screenshot Dummy
with(screenshot_dummy){
    instance_destroy();
}
//Buttons
var buttons_list_size = ds_list_size(buttons_list);
for(var i=0;i&lt;buttons_list_size;i++){
    var temp_button = ds_list_find_value(buttons_list,i);
    with(temp_button){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade Out
scr_fade(0,0,MENU_FADE_COLOR,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Dependent Variables
if(not initialized_dependent_variables){
    initialized_dependent_variables = true;
    //Create Screenshot Dummy
    screenshot_dummy = scr_instance_create_depth(0,0,obj_fade.depth+1,obj_dummy);
    with(screenshot_dummy){
        screenshot = other.screenshot;
        draw_script = scr_screenshot_dummy_draw;
    }
    
    //Title Drawn Text
    var first_title_font = ds_list_find_value(title_fonts_list,0);
    draw_set_font(first_title_font);
    var temp_title_height = string_height(title);
    title_max_height = temp_title_height*2.5;
    var return_list = scr_get_boxed_text(title,title_max_height,title_max_width,title_horizontal_padding,title_vertical_padding,title_fonts_list);
    title_drawn_text = ds_list_find_value(return_list,0);
    title_font = ds_list_find_value(return_list,1);
    ds_list_destroy(return_list);
    draw_set_font(title_font);
    title_width = string_width(title_drawn_text);
    title_height = string_height(title_drawn_text);
    //Description Drawn Text
    description_max_width = title_max_width;
    var return_list = scr_get_boxed_text(description,description_max_height,description_max_width,description_horizontal_padding,description_vertical_padding,description_fonts_list);
    description_drawn_text = ds_list_find_value(return_list,0);
    description_font = ds_list_find_value(return_list,1);
    ds_list_destroy(return_list);
    draw_set_font(description_font);
    description_width = string_width(description_drawn_text);
    description_height = string_height(description_drawn_text);
    //Calculate Width/Height
    var buttons_vertical_padding_percentage = 0.5;
    width = max(title_width,description_width);
    var title_description_vertical_difference = 0;
    if(title_height &gt; 0){
        title_description_vertical_difference = title_vertical_padding*0.5;
    }
    var description_buttons_vertical_difference = 0;
    if(description_height &gt; 0){
        description_buttons_vertical_difference = description_vertical_padding*1.25;
    }
    var buttons_end_vertical_difference = 0;
    var buttons_list_size = ds_list_size(buttons_list);
    if(buttons_list_size &gt; 0){
        buttons_end_vertical_difference = title_vertical_padding*1.75;
    }
    height = title_vertical_padding+title_height+title_description_vertical_difference+description_height+description_buttons_vertical_difference;
    for(var i=0;i&lt;buttons_list_size;i++){
        var temp_button = ds_list_find_value(buttons_list,i);
        with(temp_button){
            var sprite_box_width = sprite_width+(other.title_horizontal_padding*2);
            if(sprite_box_width &gt; other.width){
                other.width = sprite_box_width;
            }
            var button_vertical_padding = 0;
            if(i &gt; 0){
                button_vertical_padding = sprite_height*buttons_vertical_padding_percentage;
            }
            other.height += button_vertical_padding+sprite_height;
        }
    }
    height += buttons_end_vertical_difference;
    //Title Position
    title_x = x;
    title_y = y-(height/2)+title_vertical_padding+(title_height/2);
    //Description Position
    description_x = x-(description_width/2)+description_horizontal_padding;
    description_y = title_y+(title_height/2)+title_description_vertical_difference;
    //Buttons Positions
    var first_button_y = description_y+description_height+description_buttons_vertical_difference;
    var buttons_list_size = ds_list_size(buttons_list);
    for(var i=0;i&lt;buttons_list_size;i++){
        var temp_button = ds_list_find_value(buttons_list,i);
        with(temp_button){
            _window = other.id;
            var button_vertical_padding = sprite_height*buttons_vertical_padding_percentage;
            x = other.x;
            y = first_button_y+(sprite_height/2)+(i*((sprite_height/2)+button_vertical_padding+(sprite_height/2)));
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Window
//Window
scr_draw_box(x,y,width,height,noone,color,0,true,1,true);
//Title
scr_setup_write(title_font,fa_center,fa_middle,title_color);
draw_text(title_x,title_y,title_drawn_text);
//Description
scr_setup_write(description_font,fa_left,fa_top,description_color);
draw_text(description_x,description_y,description_drawn_text);

/*//Test
var circle_x = x;
var circle_y = y-(height/2)+title_vertical_padding+title_height+description_vertical_padding+description_height+description_vertical_padding;
var circle_radius = 2;
var circle_color = c_lime;
var circle_outline = false;
draw_circle_colour(circle_x,circle_y,circle_radius,circle_color,circle_color,circle_outline);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
