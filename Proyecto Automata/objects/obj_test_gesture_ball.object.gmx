<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_test_gesture_ball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables

//Flag Variables
swipe_is_double = false;
//Physics Variables
swipe_horizontal_speed = 0;
swipe_vertical_speed = 0;
swipe_speed = 0;
swipe_friction = 0.1;
//Other Variables
current_state = "OFF";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update State
switch(current_state){
    case "OFF":
        image_blend = c_white;
        switch(CURRENT_GESTURE){
            case "TOUCH":
                if(scr_mouse_hovering_object(id,true,false) != noone){
                    if(GESTURE_IS_DOUBLE){
                        var double_touch_sound = audio_play_sound(snd_touch,10,false);
                        audio_sound_pitch(double_touch_sound,1.2);
                    }else{
                        var touch_sound = audio_play_sound(snd_touch,10,false);
                    }
                    current_state = "TOUCH";
                }
                break;
        }
        break;
    case "TOUCH":
        if(GESTURE_IS_DOUBLE){
            image_blend = c_dkgray;
        }else{
            image_blend = c_gray;
        }
        switch(CURRENT_GESTURE){
            case "TAP":
                current_state = "TAP";
                break;
            case "DRAG":
                current_state = "DRAG";
                break;
        }
        break;
    case "TAP":
        if(GESTURE_IS_DOUBLE){
            image_blend = c_aqua;
        }else{
            image_blend = c_blue;
        }
        switch(CURRENT_GESTURE){
            case "OFF":
                current_state = "OFF";
                break;
        }
        break;
    case "DRAG":
        if(GESTURE_IS_DOUBLE){
            image_blend = c_orange;
        }else{
            image_blend = c_red;
        }
        x = mouse_x;
        y = mouse_y;
        switch(CURRENT_GESTURE){
            case "OFF":
                current_state = "OFF";
                break;
            case "SWIPE":
                current_state = "SWIPE";
                var swipe_sound = audio_play_sound(snd_swipe,10,false);
                swipe_horizontal_speed = SWIPE_HORIZONTAL_SPEED;
                swipe_vertical_speed = SWIPE_VERTICAL_SPEED;
                swipe_speed = SWIPE_SPEED;
                swipe_is_double = GESTURE_IS_DOUBLE;
                break;
        }
        break;
    case "SWIPE":
        if(swipe_is_double){
            image_blend = c_lime;
        }else{
            image_blend = c_green;
        }
        var swipe_direction = point_direction(x,y,x+swipe_horizontal_speed,y+swipe_vertical_speed);
        scr_jump_in_direction(swipe_speed,swipe_direction);
        swipe_speed = scr_approach(swipe_speed,0,swipe_friction);
        if(x &lt; 0){
            x = 0;
            swipe_horizontal_speed *= -1;
        }
        if(x &gt; room_width){
            x = room_width;
            swipe_horizontal_speed *= -1;
        }
        if(y &lt; 0){
            y = 0;
            swipe_vertical_speed *= -1;
        }
        if(y &gt; room_height){
            y = room_height;
            swipe_vertical_speed *= -1;
        }
        switch(CURRENT_GESTURE){
            case "TOUCH":
                if(scr_mouse_hovering_object(id,true,false) != noone){
                    var touch_sound = audio_play_sound(snd_touch,10,false);
                    current_state = "TOUCH";
                }
                break;
        }
        if(swipe_speed == 0){
            current_state = "OFF";
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
